# #training device
#device: cpu
#path to the checkpoint file containinf the refine model
#/mnt/HDD3/btan8779/checkpoint/9_26/3D/3d_ARGAN_try/
refine_model_path:  '/mnt/HDD3/btan8779/checkpoint/final_result/3D/pre-in_out-pre_pre+es/refine_best_checkpoint.pytorch'
#  '/mnt/HDD3/btan8779/checkpoint/10_11/3D/define_G/refine_best_checkpoint.pytorch'
#  '/mnt/HDD3/btan8779/checkpoint/10_9/3D/sub_set/all/without_spectrum_only_tensor_4_decayafter30_50epoches/refine_best_checkpoint.pytorch'
#  '/mnt/HDD3/btan8779/checkpoint/10_9/3D/sub_set/all/without_spectrum_only_tensor_4_decayafter30_50epoches/refine_best_checkpoint.pytorch'
#  '/mnt/HDD3/btan8779/checkpoint/9_26/3D/3d_ARGAN_try/refine_best_checkpoint.pytorch'
#  'D:/CapstoneData/test_3d/3d_ARGAN_try/refine_best_checkpoint.pytorch'
# '/mnt/HDD3/btan8779/CapstoneData/test_3d/3d_ARGAN_try/refine_best_checkpoint.pytorch'
# '/mnt/HDD3/btan8779/checkpoint/9_26/3D/3d_ARGAN_try/refine_best_checkpoint.pytorch'
#refine model configuration
refine_model:
  # model class, e.g. UNet3D, ResidualUNet3D
  name: ARNet
   # number of input channels to the model
  in_channels: 1
  # number of output channels
  out_channels: 1
# path to the checkpoint file containing the model
model_path: '/mnt/HDD3/btan8779/checkpoint/final_result/3D/pre-in_out-pre_pre+es/best_checkpoint.pytorch'
#  '/mnt/HDD3/btan8779/checkpoint/10_9/3D/sub_set/all/without_spectrum_only_tensor_4_decayafter30_50epoches/best_checkpoint.pytorch'
# model configuration
model:
  # model class, e.g. UNet3D, ResidualUNet3D
  # name: Generator
  # number of input channels to the model
  in_channels: 1
  # number of output channels
  out_channels: 1
  # of gen filters in first conv layer
  ngf: 64
  # determines the generator type
  which_model_netG: unet_32
  #use dropput
  use_dropout: true
#model:
#  # model class, e.g. UNet3D, ResidualUNet3D
#  name: PreNet
#  # number of input channels to the model
#  in_channels: 1
#  # number of output channels
#  out_channels: 1


predictor:
  # standard in memory predictor
  name: 'StandardPredictor'
# specify the test datasets
loaders:
  # batch dimension; if number of GPUs is N > 1, then a batch_size of N * batch_size will automatically be taken for DataParallel
  batch_size: 1
  # mirror pad the raw data in each axis for sharper prediction near the boundaries of the volume
  mirror_padding: [16, 32, 32]
  # path to the raw data within the H5
  raw_internal_path: raw
  # path to the preliminary results
  # how many subprocesses to use for data loading
  num_workers: 2
  # save path of output
  dataset: AbstractHDF5Dataset #H5Dataset
  output_dir: '/mnt/HDD3/btan8779/TEST_OUTPUT/final/pre-in_out-pre_pre+es' #'D:/CapstoneData/test_3d/ouput/'
  test:
    # paths to the test datasets; if a given path is a directory all H5 files ('*.h5', '*.hdf', '*.hdf5', '*.hd5')
    # inside this this directory will be included as well (non-recursively)
    file_paths:
      - '/mnt/HDD3/btan8779/CapstoneData/dataset_100/3D/3d_all/test/'
#      - '/mnt/HDD3/btan8779/CapstoneData/dataset_100/3D/3d_single/test/'
#       - '/mnt/HDD3/btan8779/CapstoneData/3d_subset/test'
#     - 'D:/CapstoneData/test_3d/test/'
    #SliceBuilder configuration, i.e. how to iterate over the inp/media/mingjian/NewVolume/DATA_Jane/low_to_high_PET/Dmixed_datasetut volume patch-by-patch
    slice_builder:
     # SliceBuilder class
      name: SliceBuilder
     # train patch size given to the network (adapt to fit in your GPU mem, generally the bigger patch the better)
      patch_shape: [32, 256, 256]
     # train stride between patches
      stride_shape: [20, 256, 256]

    transformer: test_3d_transform